{
 "Resources": {
  "ecrrepository9E7D169C": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "RepositoryName": "payouts-api"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/ecrrepository/Resource"
   }
  },
  "pipelineprojectRole43226DDC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipelineproject/Role/Resource"
   }
  },
  "pipelineprojectRoleDefaultPolicy5C0C0CF8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:logs:us-east-1:185686578002:log-group:/aws/codebuild/",
           {
            "Ref": "pipelineprojectD7BAE33F"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:logs:us-east-1:185686578002:log-group:/aws/codebuild/",
           {
            "Ref": "pipelineprojectD7BAE33F"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:BatchPutCodeCoverages",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:UpdateReport"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:codebuild:us-east-1:185686578002:report-group/",
          {
           "Ref": "pipelineprojectD7BAE33F"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "pipelineArtifactsBucket7D04D0D2",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "pipelineArtifactsBucket7D04D0D2",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:ReEncrypt*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "pipelineArtifactsBucketEncryptionKey16620CDF",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "pipelineprojectRoleDefaultPolicy5C0C0CF8",
    "Roles": [
     {
      "Ref": "pipelineprojectRole43226DDC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipelineproject/Role/DefaultPolicy/Resource"
   }
  },
  "pipelineprojectD7BAE33F": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "EnvironmentVariables": [
      {
       "Name": "ECR_REPO",
       "Type": "PLAINTEXT",
       "Value": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::GetAtt": [
                "ecrrepository9E7D169C",
                "Arn"
               ]
              }
             ]
            }
           ]
          },
          ".dkr.ecr.",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::GetAtt": [
                "ecrrepository9E7D169C",
                "Arn"
               ]
              }
             ]
            }
           ]
          },
          ".",
          {
           "Ref": "AWS::URLSuffix"
          },
          "/",
          {
           "Ref": "ecrrepository9E7D169C"
          }
         ]
        ]
       }
      }
     ],
     "Image": "aws/codebuild/standard:6.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": true,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "pipelineprojectRole43226DDC",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "aws/buildspec.yml",
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Modes": [
      "LOCAL_DOCKER_LAYER_CACHE",
      "LOCAL_CUSTOM_CACHE"
     ],
     "Type": "LOCAL"
    },
    "EncryptionKey": {
     "Fn::GetAtt": [
      "pipelineArtifactsBucketEncryptionKey16620CDF",
      "Arn"
     ]
    },
    "Name": "build-deploy-backend-application"
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipelineproject/Resource"
   }
  },
  "loadbalancedfargateserviceLB20EA04B0": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "loadbalancedfargateserviceLBSecurityGroup2C6FBC51",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "vpc-config:ExportsOutputRefpayoutsvpcPublicSubnet1SubnetE75E46D39A31C83D"
     },
     {
      "Fn::ImportValue": "vpc-config:ExportsOutputRefpayoutsvpcPublicSubnet2Subnet53CA540095E54E80"
     },
     {
      "Fn::ImportValue": "vpc-config:ExportsOutputRefpayoutsvpcPublicSubnet3Subnet79C5549538E3794B"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/loadbalancedfargateservice/LB/Resource"
   }
  },
  "loadbalancedfargateserviceLBSecurityGroup2C6FBC51": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB builddeploystackloadbalancedfargateserviceLB88CCAC3D",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "vpc-config:ExportsOutputRefpayoutsvpcE48F4DA658D5F7EA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/loadbalancedfargateservice/LB/SecurityGroup/Resource"
   }
  },
  "loadbalancedfargateserviceLBSecurityGrouptobuilddeploystackloadbalancedfargateserviceServiceSecurityGroup2DECA8D380807237F32A": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "loadbalancedfargateserviceLBSecurityGroup2C6FBC51",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "loadbalancedfargateserviceServiceSecurityGroupBB08EAFE",
      "GroupId"
     ]
    },
    "FromPort": 8080,
    "ToPort": 8080
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/loadbalancedfargateservice/LB/SecurityGroup/to builddeploystackloadbalancedfargateserviceServiceSecurityGroup2DECA8D3:8080"
   }
  },
  "loadbalancedfargateserviceLBPublicListener37BFDDEA": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "loadbalancedfargateserviceLBPublicListenerECSGroup5D504C96"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "loadbalancedfargateserviceLB20EA04B0"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/loadbalancedfargateservice/LB/PublicListener/Resource"
   }
  },
  "loadbalancedfargateserviceLBPublicListenerECSGroup5D504C96": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckIntervalSeconds": 25,
    "HealthCheckPath": "/",
    "HealthCheckPort": "8080",
    "HealthCheckTimeoutSeconds": 10,
    "HealthyThresholdCount": 2,
    "Matcher": {
     "HttpCode": "200"
    },
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "UnhealthyThresholdCount": 5,
    "VpcId": {
     "Fn::ImportValue": "vpc-config:ExportsOutputRefpayoutsvpcE48F4DA658D5F7EA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/loadbalancedfargateservice/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "loadbalancedfargateserviceTaskDefTaskRoleFC5D2F76": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/loadbalancedfargateservice/TaskDef/TaskRole/Resource"
   }
  },
  "loadbalancedfargateserviceTaskDef777E0150": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "activeProfile",
        "Value": "dev"
       },
       {
        "Name": "datasourceUsername",
        "Value": "root"
       },
       {
        "Name": "datasourcePassword",
        "Value": "{{resolve:secretsmanager:payoutsDB-dev-password:SecretString:::}}"
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::GetAtt": [
               "ecrrepository9E7D169C",
               "Arn"
              ]
             }
            ]
           }
          ]
         },
         ".dkr.ecr.",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::GetAtt": [
               "ecrrepository9E7D169C",
               "Arn"
              ]
             }
            ]
           }
          ]
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/",
         {
          "Ref": "ecrrepository9E7D169C"
         },
         ":latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "loadbalancedfargateserviceTaskDefpayoutsbackendLogGroupE5D95FF6"
        },
        "awslogs-stream-prefix": "loadbalancedfargateservice",
        "awslogs-region": "us-east-1"
       }
      },
      "Name": "payouts-backend",
      "PortMappings": [
       {
        "ContainerPort": 8080,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "loadbalancedfargateserviceTaskDefExecutionRoleA34DE4A0",
      "Arn"
     ]
    },
    "Family": "builddeploystackloadbalancedfargateserviceTaskDef7D12D53C",
    "Memory": "1024",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "loadbalancedfargateserviceTaskDefTaskRoleFC5D2F76",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/loadbalancedfargateservice/TaskDef/Resource"
   }
  },
  "loadbalancedfargateserviceTaskDefpayoutsbackendLogGroupE5D95FF6": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/loadbalancedfargateservice/TaskDef/payouts-backend/LogGroup/Resource"
   }
  },
  "loadbalancedfargateserviceTaskDefExecutionRoleA34DE4A0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/loadbalancedfargateservice/TaskDef/ExecutionRole/Resource"
   }
  },
  "loadbalancedfargateserviceTaskDefExecutionRoleDefaultPolicyCE90463C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ecrrepository9E7D169C",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "loadbalancedfargateserviceTaskDefpayoutsbackendLogGroupE5D95FF6",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "loadbalancedfargateserviceTaskDefExecutionRoleDefaultPolicyCE90463C",
    "Roles": [
     {
      "Ref": "loadbalancedfargateserviceTaskDefExecutionRoleA34DE4A0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/loadbalancedfargateservice/TaskDef/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "loadbalancedfargateserviceService4607AA72": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "EcsDefaultClusterMnL3mNNYNpayoutsvpc0DF2780D"
    },
    "DeploymentConfiguration": {
     "DeploymentCircuitBreaker": {
      "Enable": true,
      "Rollback": true
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "payouts-backend",
      "ContainerPort": 8080,
      "TargetGroupArn": {
       "Ref": "loadbalancedfargateserviceLBPublicListenerECSGroup5D504C96"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "loadbalancedfargateserviceServiceSecurityGroupBB08EAFE",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "vpc-config:ExportsOutputRefpayoutsvpcPrivateSubnet1SubnetA7DA27340A2BA944"
       },
       {
        "Fn::ImportValue": "vpc-config:ExportsOutputRefpayoutsvpcPrivateSubnet2Subnet5530EC0C6DB8CAAA"
       },
       {
        "Fn::ImportValue": "vpc-config:ExportsOutputRefpayoutsvpcPrivateSubnet3Subnet97A82956BADD2168"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "loadbalancedfargateserviceTaskDef777E0150"
    }
   },
   "DependsOn": [
    "loadbalancedfargateserviceLBPublicListenerECSGroup5D504C96",
    "loadbalancedfargateserviceLBPublicListener37BFDDEA"
   ],
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/loadbalancedfargateservice/Service/Service"
   }
  },
  "loadbalancedfargateserviceServiceSecurityGroupBB08EAFE": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "build-deploy-stack/loadbalancedfargateservice/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "vpc-config:ExportsOutputRefpayoutsvpcE48F4DA658D5F7EA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/loadbalancedfargateservice/Service/SecurityGroup/Resource"
   }
  },
  "loadbalancedfargateserviceServiceSecurityGroupfrombuilddeploystackloadbalancedfargateserviceLBSecurityGroupCF54DCC980803522104C": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "FromPort": 8080,
    "GroupId": {
     "Fn::GetAtt": [
      "loadbalancedfargateserviceServiceSecurityGroupBB08EAFE",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "loadbalancedfargateserviceLBSecurityGroup2C6FBC51",
      "GroupId"
     ]
    },
    "ToPort": 8080
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/loadbalancedfargateservice/Service/SecurityGroup/from builddeploystackloadbalancedfargateserviceLBSecurityGroupCF54DCC9:8080"
   }
  },
  "EcsDefaultClusterMnL3mNNYNpayoutsvpc0DF2780D": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/EcsDefaultClusterMnL3mNNYNpayouts-vpc/Resource"
   }
  },
  "pipelineArtifactsBucketEncryptionKey16620CDF": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::185686578002:root"
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipeline/ArtifactsBucketEncryptionKey/Resource"
   }
  },
  "pipelineArtifactsBucketEncryptionKeyAlias2DB3E5DA": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/codepipeline-build-deploy-stack-pipeline-7a8f2023",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "pipelineArtifactsBucketEncryptionKey16620CDF",
      "Arn"
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipeline/ArtifactsBucketEncryptionKeyAlias/Resource"
   }
  },
  "pipelineArtifactsBucket7D04D0D2": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "KMSMasterKeyID": {
         "Fn::GetAtt": [
          "pipelineArtifactsBucketEncryptionKey16620CDF",
          "Arn"
         ]
        },
        "SSEAlgorithm": "aws:kms"
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipeline/ArtifactsBucket/Resource"
   }
  },
  "pipelineArtifactsBucketPolicy1FCEB919": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "pipelineArtifactsBucket7D04D0D2"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "pipelineArtifactsBucket7D04D0D2",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "pipelineArtifactsBucket7D04D0D2",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipeline/ArtifactsBucket/Policy/Resource"
   }
  },
  "pipelineRole55399C5D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codepipeline.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipeline/Role/Resource"
   }
  },
  "pipelineRoleDefaultPolicy668B05DE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "pipelineArtifactsBucket7D04D0D2",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "pipelineArtifactsBucket7D04D0D2",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:ReEncrypt*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "pipelineArtifactsBucketEncryptionKey16620CDF",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "pipelineBuildbuildpayoutsbackendCodePipelineActionRoleFFBCFB89",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "pipelineDeployecsdeployactionCodePipelineActionRoleD72892DA",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "pipelineRoleDefaultPolicy668B05DE",
    "Roles": [
     {
      "Ref": "pipelineRole55399C5D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipeline/Role/DefaultPolicy/Resource"
   }
  },
  "pipelineDBECAE49": {
   "Type": "AWS::CodePipeline::Pipeline",
   "Properties": {
    "RoleArn": {
     "Fn::GetAtt": [
      "pipelineRole55399C5D",
      "Arn"
     ]
    },
    "Stages": [
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Source",
         "Owner": "ThirdParty",
         "Provider": "GitHub",
         "Version": "1"
        },
        "Configuration": {
         "Owner": "taxnitro",
         "Repo": "payouts-backend",
         "Branch": "develop",
         "OAuthToken": "{{resolve:secretsmanager:payouts-pat:SecretString:::}}",
         "PollForSourceChanges": false
        },
        "Name": "github_source",
        "OutputArtifacts": [
         {
          "Name": "SourceArtifact"
         }
        ],
        "RunOrder": 1
       }
      ],
      "Name": "Source"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "pipelineprojectD7BAE33F"
         }
        },
        "InputArtifacts": [
         {
          "Name": "SourceArtifact"
         }
        ],
        "Name": "buildpayoutsbackend",
        "OutputArtifacts": [
         {
          "Name": "BuildArtifact"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "pipelineBuildbuildpayoutsbackendCodePipelineActionRoleFFBCFB89",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Build"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Deploy",
         "Owner": "AWS",
         "Provider": "ECS",
         "Version": "1"
        },
        "Configuration": {
         "ClusterName": {
          "Ref": "EcsDefaultClusterMnL3mNNYNpayoutsvpc0DF2780D"
         },
         "ServiceName": {
          "Fn::GetAtt": [
           "loadbalancedfargateserviceService4607AA72",
           "Name"
          ]
         }
        },
        "InputArtifacts": [
         {
          "Name": "BuildArtifact"
         }
        ],
        "Name": "ecsdeployaction",
        "RoleArn": {
         "Fn::GetAtt": [
          "pipelineDeployecsdeployactionCodePipelineActionRoleD72892DA",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Deploy"
     }
    ],
    "ArtifactStore": {
     "EncryptionKey": {
      "Id": {
       "Fn::GetAtt": [
        "pipelineArtifactsBucketEncryptionKey16620CDF",
        "Arn"
       ]
      },
      "Type": "KMS"
     },
     "Location": {
      "Ref": "pipelineArtifactsBucket7D04D0D2"
     },
     "Type": "S3"
    },
    "Name": "payoutsbackendpipeline"
   },
   "DependsOn": [
    "pipelineRoleDefaultPolicy668B05DE",
    "pipelineRole55399C5D"
   ],
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipeline/Resource"
   }
  },
  "pipelineSourcegithubsourceWebhookResourceB1B8E2FC": {
   "Type": "AWS::CodePipeline::Webhook",
   "Properties": {
    "Authentication": "GITHUB_HMAC",
    "AuthenticationConfiguration": {
     "SecretToken": "{{resolve:secretsmanager:payouts-pat:SecretString:::}}"
    },
    "Filters": [
     {
      "JsonPath": "$.ref",
      "MatchEquals": "refs/heads/{Branch}"
     }
    ],
    "TargetAction": "github_source",
    "TargetPipeline": {
     "Ref": "pipelineDBECAE49"
    },
    "TargetPipelineVersion": 1,
    "RegisterWithThirdParty": true
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipeline/Source/github_source/WebhookResource"
   }
  },
  "pipelineBuildbuildpayoutsbackendCodePipelineActionRoleFFBCFB89": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::185686578002:root"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipeline/Build/buildpayoutsbackend/CodePipelineActionRole/Resource"
   }
  },
  "pipelineBuildbuildpayoutsbackendCodePipelineActionRoleDefaultPolicy509240DB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "pipelineprojectD7BAE33F",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "pipelineBuildbuildpayoutsbackendCodePipelineActionRoleDefaultPolicy509240DB",
    "Roles": [
     {
      "Ref": "pipelineBuildbuildpayoutsbackendCodePipelineActionRoleFFBCFB89"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipeline/Build/buildpayoutsbackend/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "pipelineDeployecsdeployactionCodePipelineActionRoleD72892DA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::185686578002:root"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipeline/Deploy/ecsdeployaction/CodePipelineActionRole/Resource"
   }
  },
  "pipelineDeployecsdeployactionCodePipelineActionRoleDefaultPolicy944E1082": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecs:DescribeServices",
        "ecs:DescribeTaskDefinition",
        "ecs:DescribeTasks",
        "ecs:ListTasks",
        "ecs:RegisterTaskDefinition",
        "ecs:UpdateService"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "iam:PassRole",
       "Condition": {
        "StringEqualsIfExists": {
         "iam:PassedToService": [
          "ec2.amazonaws.com",
          "ecs-tasks.amazonaws.com"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "pipelineArtifactsBucket7D04D0D2",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "pipelineArtifactsBucket7D04D0D2",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "pipelineArtifactsBucketEncryptionKey16620CDF",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "pipelineDeployecsdeployactionCodePipelineActionRoleDefaultPolicy944E1082",
    "Roles": [
     {
      "Ref": "pipelineDeployecsdeployactionCodePipelineActionRoleD72892DA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/pipeline/Deploy/ecsdeployaction/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31S204CMRD9Ft5LFQyJr+AtKokESHwk3e6wDlvaphcM2fTf7baLLGp8mjOnp3Mf08mEjgbs0w55WQ8FFrRZOcZrEqlNA9zQZglaWXTKHMndVp69QLgqofAoStosUINACQujdsBdq+xgIMj2MYoSkP63dqEE8hQuo0CA241mzoGRlk61jixzqORcsXLGBJMcykdmKuZgBeaAHAgIZh1yERVFUqCsDmPa/P3btNku/L4OrQPZaU64976OmcE9GeV1K+m5beUx5wq4N+iO35L/iYfKgLW/6GeZ+DQN2nTtrpmt72GLEttKcvpLRknH4uhNj/sxqpSog8LH/lKnHQxEqCrmm6vqu9oTzjvW3XLPa06r6+F3KD6UqgOp9zHSK6TdtmYqkKVGEwjE3tBm5nkN6UQ6lM35KPp+CGQJVnmT23jzTnuXDzGzgbywA7sa0Vt6vRmPR4OdRRwaLx3ugS6z/QIekU/P6AIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "build-deploy-stack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "loadbalancedfargateserviceLoadBalancerDNSB327FA97": {
   "Value": {
    "Fn::GetAtt": [
     "loadbalancedfargateserviceLB20EA04B0",
     "DNSName"
    ]
   }
  },
  "loadbalancedfargateserviceServiceURL224ECFBD": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "loadbalancedfargateserviceLB20EA04B0",
        "DNSName"
       ]
      }
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}